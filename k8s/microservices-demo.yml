apiVersion: v1
kind: Namespace
metadata:
  name: microservices-demo
---
# Adservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
        - name: adservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/adservice:latest
          ports:
            - containerPort: 9555
          env:
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: microservices-demo
spec:
  selector:
    app: adservice
  ports:
    - port: 80
      targetPort: 9555
  type: ClusterIP
---
# Cartservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
        - name: cartservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/cartservice:latest
          ports:
            - containerPort: 7070
          env:
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: microservices-demo
spec:
  selector:
    app: cartservice
  ports:
    - port: 80
      targetPort: 7070
  type: ClusterIP
---
# Checkoutservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
        - name: checkoutservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/checkoutservice:latest
          ports:
            - containerPort: 5050
          env:
            - name: SHIPPING_SERVICE_ADDR
              value: shippingservice:80
            - name: PAYMENT_SERVICE_ADDR
              value: paymentservice:80
            - name: EMAIL_SERVICE_ADDR
              value: emailservice:80
            - name: CART_SERVICE_ADDR
              value: cartservice:80
            - name: CURRENCY_SERVICE_ADDR
              value: currencyservice:80
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: productcatalogservice:80
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: microservices-demo
spec:
  selector:
    app: checkoutservice
  ports:
    - port: 80
      targetPort: 5050
  type: ClusterIP
---
# Currencyservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
        - name: currencyservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/currencyservice:latest
          ports:
            - containerPort: 7000
          env:
            - name: PORT
              value: "7000"
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: microservices-demo
spec:
  selector:
    app: currencyservice
  ports:
    - port: 80
      targetPort: 7000
  type: ClusterIP
---
# Emailservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      containers:
        - name: emailservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/emailservice:latest
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: microservices-demo
spec:
  selector:
    app: emailservice
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP
---
# ============================
# Frontend Deployment
# ============================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: microservices-demo
spec:
  replicas: 2 # Start mit 2 Pods (HPA passt das sp√§ter an)
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/frontend:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m" # Mindest-CPU, damit HPA arbeiten kann
              memory: "128Mi"
            limits:
              cpu: "500m" # Max-CPU pro Pod
              memory: "512Mi"
          env:
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: productcatalogservice:80
            - name: AD_SERVICE_ADDR
              value: adservice:80
            - name: CART_SERVICE_ADDR
              value: cartservice:80
            - name: EMAIL_SERVICE_ADDR
              value: emailservice:80
            - name: SHIPPING_SERVICE_ADDR
              value: shippingservice:80
            - name: RECOMMENDATION_SERVICE_ADDR
              value: recommendationservice:80
            - name: CURRENCY_SERVICE_ADDR
              value: currencyservice:80
            - name: PAYMENT_SERVICE_ADDR
              value: paymentservice:80
            - name: CHECKOUT_SERVICE_ADDR
              value: checkoutservice:80
            - name: SHOPPING_ASSISTANT_SERVICE_ADDR
              value: shoppingassistantservice:80
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"

---
# ============================
# Frontend Service
# ============================
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: microservices-demo
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 8080
  type: LoadBalancer

---
# ============================
# Horizontal Pod Autoscaler
# ============================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: microservices-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50

---
# Paymentservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
        - name: paymentservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/paymentservice:latest
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: microservices-demo
spec:
  selector:
    app: paymentservice
  ports:
    - port: 80
      targetPort: 50051
  type: ClusterIP
---
# Productcatalogservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
        - name: productcatalogservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/productcatalogservice:latest
          ports:
            - containerPort: 3550
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: microservices-demo
spec:
  selector:
    app: productcatalogservice
  ports:
    - port: 80
      targetPort: 3550
  type: ClusterIP
---
# Recommendationservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
        - name: recommendationservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/recommendationservice:latest
          ports:
            - containerPort: 8081
          env:
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: productcatalogservice:80
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: microservices-demo
spec:
  selector:
    app: recommendationservice
  ports:
    - port: 80
      targetPort: 8081
  type: ClusterIP
---
# Shippingservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
        - name: shippingservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/shippingservice:latest
          ports:
            - containerPort: 50051
          env:
            - name: DISABLE_PROFILER
              value: "true"
            - name: DISABLE_TRACING
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: microservices-demo
spec:
  selector:
    app: shippingservice
  ports:
    - port: 80
      targetPort: 50051
  type: ClusterIP
---
# Shoppingassistantservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shoppingassistantservice
  namespace: microservices-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shoppingassistantservice
  template:
    metadata:
      labels:
        app: shoppingassistantservice
    spec:
      containers:
        - name: shoppingassistantservice
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/shoppingassistantservice:latest
          ports:
            - containerPort: 8080
          env:
            - name: OPENAI_API_KEY
              value: "sk-xxx" # Replace with your real key
            - name: DB_HOST
              value: shopping-assistant-db.czcmm4esc0mr.eu-central-1.rds.amazonaws.com
            - name: DB_NAME
              value: shoppingdb
            - name: DB_USER
              value: postgres
            - name: DB_PASS
              value: MySecurePass123!
---
apiVersion: v1
kind: Service
metadata:
  name: shoppingassistantservice
  namespace: microservices-demo
spec:
  selector:
    app: shoppingassistantservice
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP
---
# Loadgenerator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: microservices-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadgenerator
  template:
    metadata:
      labels:
        app: loadgenerator
    spec:
      containers:
        - name: loadgenerator
          image: 610351333224.dkr.ecr.eu-central-1.amazonaws.com/loadgenerator:latest
          env:
            - name: FRONTEND_ADDR
              value: frontend:80
            - name: USERS
              value: "20"
            - name: RATE
              value: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: loadgenerator
  namespace: microservices-demo
spec:
  selector:
    app: loadgenerator
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP
